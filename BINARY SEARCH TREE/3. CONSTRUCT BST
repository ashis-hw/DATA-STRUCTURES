/*==========================================EXAMPLE=======================================================*/
 
                    


/*=============================================CODE=========================================================*/

public class Solution {

	/*	Binary Tree Node class 
	 * 
	 * 	class BinaryTreeNode<T> {
			T data;
			BinaryTreeNode<T> left;
			BinaryTreeNode<T> right;
			
			public BinaryTreeNode(T data) {
				this.data = data;
			}
		}
		*/
	
		public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr, int n){
			return helper(arr, 0, arr.length - 1);
		}

		public static BinaryTreeNode<Integer> helper(int [] arr,int s,int e){
        
        if(s>e)
            return null;
        
        if(s==e){
            BinaryTreeNode<Integer> n1=new BinaryTreeNode<Integer>(arr[s]);
            return n1;
        }
        
        int mid=s+(e-s)/2;
        BinaryTreeNode<Integer> root = new BinaryTreeNode<Integer>(arr[mid]);
        root.left=helper(arr,s,mid-1);
        root.right=helper(arr,mid+1,e);
        return root;
		}
	}

/*=============================================DRYRUN=========================================================*/



