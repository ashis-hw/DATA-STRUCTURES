/*==========================================EXAMPLE=======================================================*/
 
                    


/*=============================================CODE=========================================================*/

import java.util.ArrayList;

public class Solution {

	/*
	 * Binary Tree Node class
	 * 
	 * class BinaryTreeNode<T> { 
	 * 		T data; 
	 * 		BinaryTreeNode<T> left; 
	 * 		BinaryTreeNode<T> right;
	 * 		public BinaryTreeNode(T data) 
	 * 		{ 
	 * 			this.data = data; 
	 * 		}
	 * }
	 */

	public static ArrayList<Integer> getPath(BinaryTreeNode<Integer> root, int data){
		/* Your class should be named Solution
		* Don't write main().
		* Don't read input, it is passed as function argument.
		* Return output and don't print it.
		* Taking input and printing output is handled automatically.
		*/
        
        if(root==null)
            return null;
        
        if(root.data==data){
            ArrayList<Integer> l1 = new ArrayList<>();
            l1.add(data);
            return l1;
        }
        
        ArrayList<Integer> l1=null;
        ArrayList<Integer> r1=null;
        if(root.data>data)
        	l1 = getPath(root.left,data);
        
        if(l1!=null){
            l1.add(root.data);
            return l1;
        }
        
        if(root.data<data)
            r1 = getPath(root.right,data);
        
        if(r1!=null){
            r1.add(root.data);
            return r1;
        }
        
        return null;
	}
}



/*=============================================DRYRUN=========================================================*/






