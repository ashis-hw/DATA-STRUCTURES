/*==========================================EXAMPLE=======================================================*/
 
                       1
                     /  \
                    2    3     
                   /    / \
                  4    5   6
                 / \
                9   7
               

OUTPUT: 4 (because 2 has only one child that is 4 so 4 doesn't have any sibling)


/*=============================================CODE=========================================================*/

public class Solution {

	public static void printNodesWithoutSibling(BinaryTreeNode<Integer> root) {
		//Your code goes here
		if (root == null)
			return;

		if (root.left != null && root.right == null)
			System.out.print(root.left.data + " ");

		if (root.right != null && root.left == null)
			System.out.print(root.right.data + " ");

		printNodesWithoutSibling(root.left);
		printNodesWithoutSibling(root.right);
	}
}


/*=============================================DRYRUN=========================================================*/


