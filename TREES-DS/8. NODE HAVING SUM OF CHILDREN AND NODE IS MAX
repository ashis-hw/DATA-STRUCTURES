/*==========================================EXAMPLE=======================================================*/
 
                    


/*=============================================CODE=========================================================*/

import java.util.*;
public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	
	
	public static TreeNode<Integer> maxSumNode(TreeNode<Integer> root){
		// Write your code here
		if(root==null || root.children.size()==0)
            return root;
        
        Queue<TreeNode<Integer>> q=new LinkedList<>();
        TreeNode<Integer> largest=root;
        int sum=0;
        q.add(root);
        while(!q.isEmpty()){
            TreeNode<Integer> n1=q.poll();
            int sum1=n1.data;
            for(TreeNode<Integer> n2:n1.children){
                sum1+=n2.data;
                q.add(n2);
            }
            if(sum1>sum){
                sum=sum1;
                largest=n1;
            }
        }
        return largest;
	}
}


/*=============================================DRYRUN=========================================================*/
